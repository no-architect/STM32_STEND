/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen1ViewBase::Screen1ViewBase() :
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)
{

    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    box1.setPosition(0, 0, 480, 272);
    box1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));

    buttonWithLabelSettings.setXY(420, 212);
    buttonWithLabelSettings.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID));
    buttonWithLabelSettings.setLabelText(touchgfx::TypedText(T___SINGLEUSE_FRGX));
    buttonWithLabelSettings.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithLabelSettings.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithLabelSettings.setAction(buttonCallback);

    buttonUp.setXY(6, 97);
    buttonUp.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID));
    buttonUp.setLabelText(touchgfx::TypedText(T___SINGLEUSE_WFXC));
    buttonUp.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonUp.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonUp.setAction(buttonCallback);

    buttonDown.setXY(6, 157);
    buttonDown.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID));
    buttonDown.setLabelText(touchgfx::TypedText(T___SINGLEUSE_SQTY));
    buttonDown.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonDown.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonDown.setAction(buttonCallback);

    textCounter.setPosition(119, 145, 50, 26);
    textCounter.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textCounter.setLinespacing(1);
    Unicode::snprintf(textCounterBuffer, TEXTCOUNTER_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UI9G).getText());
    textCounter.setWildcard(textCounterBuffer);
    textCounter.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M1WA));

    SWButtonHWLED.setXY(240, 127);
    SWButtonHWLED.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID));
    SWButtonHWLED.setLabelText(touchgfx::TypedText(T___SINGLEUSE_8JK1));
    SWButtonHWLED.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    SWButtonHWLED.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    SWButtonHWLED.setAction(buttonCallback);

    SWButtonSWLED.setXY(413, 127);
    SWButtonSWLED.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID));
    SWButtonSWLED.setLabelText(touchgfx::TypedText(T___SINGLEUSE_Z1PA));
    SWButtonSWLED.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    SWButtonSWLED.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    SWButtonSWLED.setAction(buttonCallback);

    SwLedOff.setXY(324, 128);
    SwLedOff.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_SQUARE_ICON_BUTTON_PRESSED_ID));

    SwLedOn.setXY(324, 128);
    SwLedOn.setVisible(false);
    SwLedOn.setBitmap(touchgfx::Bitmap(BITMAP_DARK_BUTTONS_SQUARE_ICON_BUTTON_PRESSED_ID));

    textTemp.setPosition(119, 25, 265, 30);
    textTemp.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textTemp.setLinespacing(1);
    Unicode::snprintf(textTempBuffer, TEXTTEMP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_B9N4).getText());
    textTemp.setWildcard(textTempBuffer);
    textTemp.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D9Z5));

    add(__background);
    add(box1);
    add(buttonWithLabelSettings);
    add(buttonUp);
    add(buttonDown);
    add(textCounter);
    add(SWButtonHWLED);
    add(SWButtonSWLED);
    add(SwLedOff);
    add(SwLedOn);
    add(textTemp);
}

void Screen1ViewBase::setupScreen()
{

}

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabelSettings)
    {
        //Interaction2
        //When buttonWithLabelSettings clicked change screen to ScreenTable
        //Go to ScreenTable with screen transition towards East
        application().gotoScreenTableScreenSlideTransitionEast();

        //btnSETTINGS
        //When buttonWithLabelSettings clicked call virtual function
        //Call saveSettings
        saveSettings();
    }
    else if (&src == &buttonUp)
    {
        //btnUP
        //When buttonUp clicked call virtual function
        //Call buttonUpClick
        buttonUpClick();
    }
    else if (&src == &buttonDown)
    {
        //btnDOWN
        //When buttonDown clicked call virtual function
        //Call buttonDownClick
        buttonDownClick();
    }
    else if (&src == &SWButtonHWLED)
    {
        //SWToggleHWLED
        //When SWButtonHWLED clicked execute C++ code
        //Execute C++ code
        presenter->swButtonHwLedToggle();
    }
    else if (&src == &SWButtonSWLED)
    {
        //SWToggleSWLED
        //When SWButtonSWLED clicked execute C++ code
        //Execute C++ code
        presenter->swButtonSwLedToggle();
    }
}
